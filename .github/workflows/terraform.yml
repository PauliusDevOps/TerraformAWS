name: Terraform Infrastructure Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push to main branch
  push:
    branches: [ "main" ]
  # Allows manual trigger from the Actions tab
  workflow_dispatch:

# Permissions for the workflow
permissions:
  contents: read

# Environment variables
env:
  TF_VERSION: 1.10.1
  AWS_REGION: us-east-1

jobs:
  terraform-plan-and-apply:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest
    
    # Use environment secrets for AWS credentials
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v4

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init
      
    # Validate Terraform configuration
    - name: Terraform Validate
      run: terraform validate

    # Generate Terraform Plan
    - name: Terraform Plan
      run: terraform plan -out=tfplan
      
    # Apply Terraform changes (only on main branch)
    - name: Terraform Apply
      # Only apply if it's on the main branch and not a pull request
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve tfplan

    # Optional: Add a step to comment on the commit with plan details
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1